Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     statement -> INT IDENTIFIER SEMICOLON
Rule 3     statement -> MAIN LPAREN RPAREN LBRACE statement RBRACE

Terminals, with rules where they appear

IDENTIFIER           : 2
INT                  : 2
LBRACE               : 3
LPAREN               : 3
MAIN                 : 3
RBRACE               : 3
RPAREN               : 3
SEMICOLON            : 2
error                : 

Nonterminals, with rules where they appear

program              : 0
statement            : 1 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) statement -> . INT IDENTIFIER SEMICOLON
    (3) statement -> . MAIN LPAREN RPAREN LBRACE statement RBRACE

    INT             shift and go to state 3
    MAIN            shift and go to state 4

    program                        shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .

    $end            reduce using rule 1 (program -> statement .)


state 3

    (2) statement -> INT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 5


state 4

    (3) statement -> MAIN . LPAREN RPAREN LBRACE statement RBRACE

    LPAREN          shift and go to state 6


state 5

    (2) statement -> INT IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 7


state 6

    (3) statement -> MAIN LPAREN . RPAREN LBRACE statement RBRACE

    RPAREN          shift and go to state 8


state 7

    (2) statement -> INT IDENTIFIER SEMICOLON .

    $end            reduce using rule 2 (statement -> INT IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 2 (statement -> INT IDENTIFIER SEMICOLON .)


state 8

    (3) statement -> MAIN LPAREN RPAREN . LBRACE statement RBRACE

    LBRACE          shift and go to state 9


state 9

    (3) statement -> MAIN LPAREN RPAREN LBRACE . statement RBRACE
    (2) statement -> . INT IDENTIFIER SEMICOLON
    (3) statement -> . MAIN LPAREN RPAREN LBRACE statement RBRACE

    INT             shift and go to state 3
    MAIN            shift and go to state 4

    statement                      shift and go to state 10

state 10

    (3) statement -> MAIN LPAREN RPAREN LBRACE statement . RBRACE

    RBRACE          shift and go to state 11


state 11

    (3) statement -> MAIN LPAREN RPAREN LBRACE statement RBRACE .

    $end            reduce using rule 3 (statement -> MAIN LPAREN RPAREN LBRACE statement RBRACE .)
    RBRACE          reduce using rule 3 (statement -> MAIN LPAREN RPAREN LBRACE statement RBRACE .)

